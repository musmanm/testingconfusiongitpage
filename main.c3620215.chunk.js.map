{"version":3,"sources":["logo.svg","components/DishDetailComponent.js","components/MenuComponents.js","shared/dishes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DishDetail","props","comments","map","comment","className","author","date","substring","indexOf","dish","width","src","image","alt","name","description","this","renderComment","renderDish","Component","Menu","state","selectedDish","setState","menu","dishes","key","id","onClick","onDishSelect","heading","DISHES","category","label","price","rating","App","dark","color","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3620215.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, {Component} from 'react';\r\nimport {Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle} from 'reactstrap';\r\n\r\nclass DishDetail extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    renderComment(comments){\r\n        if(comments != null){\r\n            const commentList = comments.map( (comment) => {\r\n                return(\r\n                    <div>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>{comment.comment}</li>\r\n                            <li>--{comment.author}, {(comment.date).substring(0,(comment.date).indexOf(\"T\"))}</li>\r\n                        </ul>\r\n                    </div>        \r\n                );\r\n            });\r\n            return (commentList);\r\n        }\r\n        else{\r\n            return(<div></div>);\r\n        }\r\n    }\r\n\r\n    renderDish(dish){\r\n        return(\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    {this.renderComment(dish.comments)}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return( this.renderDish(this.props.dish));\r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React, {Component} from 'react';\r\nimport {Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle} from 'reactstrap';\r\nimport DishDetail from './DishDetailComponent';\r\n\r\nclass Menu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedDish: null\r\n        }\r\n    }\r\n\r\n    onDishSelect(dish){\r\n        this.setState({selectedDish: dish});\r\n    }\r\n\r\n    renderDish(dish){\r\n        if(dish !=null){\r\n            return(\r\n                <DishDetail dish={dish}/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const menu = this.props.dishes.map( (dish) => {\r\n            return(\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <Card onClick={() => this.onDishSelect(dish)}>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle heading>{dish.name}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n                </div>        \r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        {menu}\r\n                </div>\r\n                {this.renderDish(this.state.selectedDish)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: 'assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]                        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: 'assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: 'assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: 'assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        }\r\n    ];","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport Menu from './components/MenuComponents';\r\nimport './App.css';\r\nimport {DISHES} from './shared/dishes';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      dishes: DISHES\r\n    };\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <div>\r\n          <Navbar dark color=\"primary\">\r\n            <div className=\"container\">\r\n              <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\r\n            </div>\r\n          </Navbar>\r\n          <Menu dishes={this.state.dishes}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}